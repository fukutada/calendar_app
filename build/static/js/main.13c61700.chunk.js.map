{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["CalendarData","props","locale","plugins","timeGridPlugin","dayGridPlugin","interactionPlugin","initialView","slotDuration","selectable","businessHours","daysOfWeek","startTime","endTIme","weekends","titleFormat","year","month","headerToolbar","start","center","end","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"8NAgFeA,EAvDM,SAACC,GAEpB,OACE,8BACE,cAAC,IAAD,CACEC,OAAO,KACPC,QAAS,CAACC,IAAgBC,IAAeC,KACzCC,YAAY,eACZC,aAAa,WACbC,YAAY,EACZC,cAAe,CACbC,WAAY,CAAC,EAAG,EAAG,EAAG,EAAG,GACzBC,UAAW,QACXC,QAAS,SAEXC,UAAU,EACVC,YAAa,CACXC,KAAM,UACNC,MAAO,SAETC,cAAe,CACbC,MAAO,QACPC,OAAQ,oBACRC,IAAK,kCCpCAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.13c61700.chunk.js","sourcesContent":["\nimport React, { useState } from 'react'\n\n// FullCalendarコンポーネント。\nimport FullCalendar from '@fullcalendar/react'\n\n// で週表示を可能にするモジュール。\nimport timeGridPlugin from '@fullcalendar/timegrid'\n\n// で月表示を可能にするモジュール。\nimport dayGridPlugin from '@fullcalendar/daygrid'\n\n// で日付や時間が選択できるようになるモジュール。\nimport interactionPlugin from '@fullcalendar/interaction'\n\nimport DatePicker, { registerLocale } from \"react-datepicker\";\n\nimport ja from 'date-fns/locale/ja'\n\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\n\n\nimport \"@fullcalendar/daygrid/main.css\";\nimport \"@fullcalendar/timegrid/main.css\";\n\nconst CalendarData = (props) => {\n\n  return (\n    <div>\n      <FullCalendar\n        locale=\"ja\"\n        plugins={[timeGridPlugin, dayGridPlugin, interactionPlugin]}\n        initialView=\"dayGridMonth\"\n        slotDuration=\"00:10:00\"\n        selectable={true}\n        businessHours={{\n          daysOfWeek: [1, 2, 3, 4, 5],\n          startTime: '00:00',\n          endTIme: '24:00'\n        }}\n        weekends={true}\n        titleFormat={{\n          year: 'numeric',\n          month: 'short'\n        }}\n        headerToolbar={{\n          start: 'title',\n          center: 'prev, next, today',\n          end: 'dayGridMonth,timeGridWeek'\n        }}\n\n      />\n\n    </div>\n  )\n}\n\n\n// renderForm() {\n//   return (\n//     <div\n//       className={\n//         this.state.formInview ? \"container__form inview\" : \"container__form\"\n//       }\n//     >\n//       <form>\n//         {this.state.isChange ? (\n//           <div className=\"container__form__header\">予定を変更</div>\n//         ) : (\n//           <div className=\"container__form__header\">予定を入力</div>\n//         )}\n//         <div>{this.renderTitle()}</div>\n//         <div>{this.renderStartTime()}</div>\n//         <div>{this.renderEndTime()}</div>\n//         <div>{this.renderMemo()}</div>\n//         <div>{this.renderBtn()}</div>\n//       </form>\n//     </div>\n//   );\n// };\nexport default CalendarData;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}