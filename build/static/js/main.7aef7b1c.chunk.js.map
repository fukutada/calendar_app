{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["ja","options","weekStartsOn","registerLocale","App","props","handleSelect","selectInfo","start","Date","end","setHours","getHours","setState","inputTitle","inputMemo","isInputTitle","inputStart","inputEnd","isChange","formInview","handleClick","info","selEventID","event","id","selEvent","myEvents","title","memo","addEvent","ev","col","getID","push","ref","current","getApi","changeEvent","getEventById","remove","sortEventID","a","b","i","sort","length","React","createRef","state","EVENT_SEL_NON","onAddEvent","bind","onChangeEvent","onDeleteEvent","className","locale","defaultView","slotDuration","selectable","allDaySlot","titleFormat","year","month","day","header","center","businessHours","daysOfWeek","startTime","endTime","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","this","weekends","events","eventClick","select","eventMouseEnter","handleMouseEnt","eventMouseLeave","handleMouseLev","eventDragStart","handleDragStart","eventDrop","handleDrop","eventResize","handleResize","dateClick","handledateClick","eventRender","handleRender","renderCover","renderForm","onClick","renderTitle","renderStartTime","renderEndTime","renderMemo","renderBtn","Fragment","type","value","onChange","e","target","rows","dateFormat","selected","showTimeSelect","timeFormat","timeIntervals","todayButton","time","disabled","number","slice","dt","getFullYear","getdoubleDigestNumer","getMonth","date","getDate","hour","minutes","getMinutes","starttime","changeDateToString","endtime","alert","window","values","confirm","EventID","isDel","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7aef7b1c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\n// import \"@fullcalendar/core/main.css\";\nimport \"@fullcalendar/daygrid/main.css\";\nimport \"@fullcalendar/timegrid/main.css\";\nimport DatePicker, { registerLocale } from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport ja from \"date-fns/locale/ja\";\nja.options.weekStartsOn = 0;\nregisterLocale(\"ja\", ja);\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n    this.state = {\n      formInview: false,\n      inputStart: new Date(),\n      inputEnd: new Date(),\n      inputTitle: \"\",\n      inputMemo: \"\",\n      isInputTitle: false,\n      isChange: false,\n    };\n    this.myEvents = [\n      {\n        id: 0,\n        title: \"event 1\",\n        start: \"2020-05-22 10:00:00\",\n        end: \"2020-05-22 11:00:00\",\n        memo: \"memo1\",\n      },\n      {\n        id: 1,\n        title: \"event 2\",\n        start: \"2020-05-23 10:00:00\",\n        end: \"2020-05-23 11:00:00\",\n        memo: \"memo2\",\n      },\n    ];\n    this.EVENT_SEL_NON = 0xffff;\n    this.selEventID = this.EVENT_SEL_NON;\n    this.onAddEvent = this.onAddEvent.bind(this);\n    this.onChangeEvent = this.onChangeEvent.bind(this);\n    this.onDeleteEvent = this.onDeleteEvent.bind(this);\n\n  }\n  render() {\n    // console.log(this.myEvents);\n    return (\n      <div>\n        {/* {this.renderCover()}\n        {this.renderForm()} */}\n        <div className=\"container\">\n          <FullCalendar\n            locale=\"ja\" // 日本語\n            defaultView=\"timeGridWeek\"\n            slotDuration=\"00:30:00\"\n            selectable={true}\n            allDaySlot={false}\n            // navLinks={true}\n            titleFormat={{\n              year: \"numeric\",\n              month: \"short\",\n              day: \"numeric\",\n            }}\n            header={{\n              start: 'title',\n              center: 'prev, next, today',\n              end: 'dayGridMonth,timeGridWeek,'\n            }}\n            businessHours={{\n              daysOfWeek: [1, 2, 3, 4, 5],\n              startTime: \"0:00\",\n              endTime: \"24:00\",\n            }}\n            plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n            ref={this.ref}\n            weekends={true} // 週末表示\n            events={this.myEvents}\n            eventClick={this.handleClick}\n            select={this.handleSelect}\n            eventMouseEnter={this.handleMouseEnt}  // イベント上にマウス\n            eventMouseLeave={this.handleMouseLev}  // イベント上のマウス離れ\n            eventDragStart={this.handleDragStart}  // イベントドラッグ開始時\n            eventDrop={this.handleDrop}            // ドロップ完了時\n            eventResize={this.handleResize}        // イベントサイズ変更完了時\n            dateClick={this.handledateClick}       // 日付クリック時\n            eventRender={this.handleRender}\n          />\n          {/* <input type=\"button\" value=\"印刷\" onclick={() => { window.print(); }} /> */}\n        </div>\n        {this.renderCover()}\n        {this.renderForm()}\n      </div>\n    );\n  }\n\n\n  handleSelect = (selectInfo) => {\n    let start = new Date(selectInfo.start);\n    let end = new Date(selectInfo.end);\n    start.setHours(start.getHours());\n    end.setHours(end.getHours());\n\n    this.setState({ inputTitle: \"\" });\n    this.setState({ inputMemo: \"\" });\n    this.setState({ isInputTitle: false });\n    this.setState({ inputStart: start });\n    this.setState({ inputEnd: end });\n    this.setState({ isChange: false });\n    this.setState({ formInview: true });\n  };\n\n  handleClick = (info) => {\n    this.selEventID = info.event.id;\n    const selEvent = this.myEvents[info.event.id];\n    const title = selEvent.title;\n    const memo = selEvent.memo;\n    const start = new Date(selEvent.start);\n    const end = new Date(selEvent.end);\n\n    this.setState({ inputTitle: title });\n    this.setState({ inputMemo: memo });\n    this.setState({ isInputTitle: true });\n    this.setState({ inputStart: start });\n    this.setState({ inputEnd: end });\n    this.setState({ isChange: true });\n    this.setState({ formInview: true });\n\n  };\n\n  // カバー\n  renderCover() {\n    return (\n      <div\n        onClick={() => {\n          this.setState({ formInview: false });\n        }}\n        className={\n          this.state.formInview\n            ? \"container__cover inview\"\n            : \"container__cover \"\n        }\n      ></div>\n    );\n  }\n\n  // フォーム\n  renderForm() {\n    return (\n      <div\n        className={\n          this.state.formInview ? \"container__form inview\" : \"container__form\"\n        }\n      >\n        <form>\n          {this.state.isChange === false ? (\n            <div className=\"container__form__header\">予定を入力</div>\n          ) : (\n            <div className=\"container__form__header\">予定を変更</div>\n          )}\n\n          <div>{this.renderTitle()}</div>\n          <div>{this.renderStartTime()}</div>\n          <div>{this.renderEndTime()}</div>\n          <div>{this.renderMemo()}</div>\n          <div>{this.renderBtn()}</div>\n        </form>\n      </div>\n    );\n  }\n  renderTitle() {\n    return (\n      <React.Fragment>\n        <p className=\"container__form__label\">タイトル</p>\n        <input\n          className=\"container__form__title\"\n          type=\"text\"\n          value={this.state.inputTitle}\n          onChange={(e) => {\n            this.setState({ inputTitle: e.target.value });\n\n            if (e.target.value === \"\") {\n              this.setState({ isInputTitle: false });\n            } else {\n              this.setState({ isInputTitle: true });\n            }\n          }}\n        />\n      </React.Fragment>\n    );\n  }\n  renderMemo() {\n    return (\n      <React.Fragment>\n        <p className=\"container__form__label\">メモ</p>\n        <textarea\n          className=\"container__form__memo\"\n          rows=\"3\"\n          value={this.state.inputMemo}\n          onChange={(e) => {\n            this.setState({ inputMemo: e.target.value });\n          }}\n        />\n      </React.Fragment>\n    );\n  }\n  renderStartTime() {\n    return (\n      <React.Fragment>\n        <p className=\"container__form__label\">開始日時</p>\n        <DatePicker\n          className=\"container__form__datetime\"\n          locale=\"ja\"\n          dateFormat=\"yyyy/MM/d HH:mm\"\n          selected={this.state.inputStart}\n          showTimeSelect\n          timeFormat=\"HH:mm\"\n          timeIntervals={15}\n          todayButton=\"today\"\n          onChange={(time) => {\n            this.setState({ inputStart: time });\n          }}\n        />\n      </React.Fragment>\n    );\n  }\n  renderEndTime() {\n    return (\n      <React.Fragment>\n        <p className=\"container__form__label\">終了日時</p>\n        <DatePicker\n          className=\"container__form__datetime\"\n          locale=\"ja\"\n          dateFormat=\"yyyy/MM/d HH:mm\"\n          selected={this.state.inputEnd}\n          showTimeSelect\n          timeFormat=\"HH:mm\"\n          timeIntervals={10}\n          todayButton=\"today\"\n          onChange={(time) => {\n            this.setState({ inputEnd: time });\n          }}\n        />\n      </React.Fragment>\n    );\n  }\n  renderBtn() {\n    return (\n      <div>\n        {this.state.isChange === false ? (\n          <div>\n            <input\n              className=\"container__form__btn_cancel\"\n              type=\"button\"\n              value=\"キャンセル\"\n              onClick={() => {\n                this.setState({ formInview: false });\n              }}\n            />\n            <input\n              className=\"container__form__btn_save\"\n              type=\"button\"\n              value=\"保存\"\n              disabled={!this.state.isInputTitle}\n              onClick={this.onAddEvent}\n            />\n\n          </div>\n        ) : (\n          <div>\n            <input\n              className=\"container__form__btn_delete\"\n              type=\"button\"\n              value=\"削除\"\n              onClick={this.onDeleteEvent}\n            />\n            <input\n              className=\"container__form__btn_save\"\n              type=\"button\"\n              value=\"変更\"\n              onClick={this.onChangeEvent}\n            />\n\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  // イベント関連\n  getdoubleDigestNumer(number) {\n    return (\"0\" + number).slice(-2);\n  }\n  changeDateToString(dt) {\n    const year = dt.getFullYear();\n    const month = this.getdoubleDigestNumer(dt.getMonth() + 1);\n    const date = this.getdoubleDigestNumer(dt.getDate());\n    const hour = this.getdoubleDigestNumer(dt.getHours());\n    const minutes = this.getdoubleDigestNumer(dt.getMinutes());\n\n    const retDate = `${year}-${month}-${date} ${hour}:${minutes}:00`;\n    return retDate;\n  }\n  onAddEvent() {\n    const starttime = this.changeDateToString(this.state.inputStart);\n    const endtime = this.changeDateToString(this.state.inputEnd);\n\n    if (starttime >= endtime) {\n      alert(\"開始時間と終了時間を確認してください。\");\n      return;\n    }\n    const event = {\n      title: this.state.inputTitle,\n      memo: this.state.inputMemo,\n      start: starttime,\n      end: endtime,\n    };\n    if (this.addEvent(event) === true) {\n      window.alert(\"設定しました\");\n      this.setState({ formInview: false });\n    }\n  }\n  onChangeEvent(values) {\n    if (window.confirm(\"変更しますか？\")) {\n      const starttime = this.changeDateToString(this.state.inputStart);\n      const endtime = this.changeDateToString(this.state.inputEnd);\n\n      if (starttime >= endtime) {\n        alert(\"開始時間と終了時間を確認してください。\");\n        return;\n      }\n\n      const event = {\n        title: this.state.inputTitle,\n        memo: this.state.inputMemo,\n        start: starttime,\n        end: endtime,\n        id: this.selEventID,\n      };\n      if (this.changeEvent(event) === true) {\n        window.alert(\"イベントを変更しました。\");\n        this.setState({ formInview: false });\n      }\n    } else {\n      return;\n    }\n  }\n  onDeleteEvent(values) {\n    if (window.confirm(\"削除しますか？\")) {\n      if (this.selEventID < this.EVENT_SEL_NON) {\n        let EventID = this.selEventID;\n        let delevent = this.ref.current.getApi().getEventById(EventID);\n        delevent.remove();\n        this.selEventID = this.EVENT_SEL_NON;\n        this.myEvents[EventID].isDel = true;\n      }\n      this.setState({ formInview: false });\n      alert(\"イベントを削除しました。\");\n    } else {\n      return;\n    }\n  }\n  addEvent = (ev, col) => {\n    ev.id = this.getID();\n    this.myEvents.push(ev);\n    this.ref.current.getApi().addEvent(ev);\n\n    return true;\n  };\n  changeEvent = (ev, col = \"red\") => {\n    this.myEvents[ev.id].title = ev.title;\n    this.myEvents[ev.id].memo = ev.memo;\n    this.myEvents[ev.id].start = ev.start;\n    this.myEvents[ev.id].end = ev.end;\n\n    this.ref.current.getApi().getEventById(ev.id).remove();\n    this.ref.current.getApi().addEvent(this.myEvents[ev.id]);\n\n    return true;\n  };\n  sortEventID = (a, b) => {\n    return a.id < b.id ? -1 : a.id > b.id ? 1 : 0;\n  };\n  getID = () => {\n    this.myEvents.sort(this.sortEventID);\n    let i;\n    for (i = 0; i < this.myEvents.length; i++) {\n      if (this.myEvents[i].id !== i) {\n        break;\n      }\n    }\n    return i;\n  };\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}